{"version":3,"sources":["containers/home.js","containers/addlink.js","containers/u.js","Routes.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Home","react_default","a","createElement","className","Component","AddLink","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","url","buttonEnabled","buttonStyle","ui","redirectionurl","handleChange","bind","assertThisInitialized","buttonClick","value","test","toVal","validateUrl","setState","length","e","target","_this2","data","JSON","stringify","axios","post","then","res","console","log","message","FormGroup","controlid","validationState","getValidationState","ControlLabel","FormControl","type","onChange","placeholder","Button","onClick","bsStyle","disabled","src","style","width","u","timeRemaining","hashLink","props","match","params","alert","redirectURL","window","location","catch","err","Routes","Switch","Route","path","exact","component","App","Navbar","fluid","collapseOnSelect","Header","Brand","Link","to","Toggle","Collapse","Nav","pullRight","lib","NavItem","Boolean","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d8c0976f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './home.css';\n\nexport default class Home extends Component{\n    render(){\n        return (\n                <div className=\"Home\">\n                    <div className=\"lander\">\n                        <h1>Chinna Link</h1>\n                        <p>Shorten your links at ease!</p>\n                    </div>\n                </div>\n        )\n        \n    }\n}","import React, {Component} from 'react';\nimport {FormGroup, ControlLabel, FormControl, Button} from 'react-bootstrap';\nimport './addlink.css';\nimport axios from 'axios';\n\nexport default class AddLink extends Component{\n    constructor(){\n        super();\n        this.state = {\n            url : '',\n            buttonEnabled: true,\n            buttonStyle: 'danger',\n            ui: 'addurl',\n            redirectionurl: ''\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.buttonClick = this.buttonClick.bind(this);\n    }\n    validateUrl(value) {\n        return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(value);\n      }\n    getValidationState(){\n        let toVal = this.state.url\n        if (this.validateUrl(toVal) == true){\n            if(this.state.buttonEnabled){\n                this.setState({buttonStyle: 'success', buttonEnabled: false})\n            }\n            return 'success'\n        }\n        else if(toVal.length > 2){\n            if(!this.state.buttonEnabled){\n                this.setState({buttonStyle: 'danger', buttonEnabled: true})\n            }\n            return 'error'\n        }\n        return null;\n    }\n    handleChange(e){\n        this.setState({url: e.target.value})\n    }\n    buttonClick(){\n        var data = {\n            'url': this.state.url\n        }\n        let fetchData = {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            mode: 'cors'\n        }\n        axios.post(\"https://8523oudczf.execute-api.us-east-1.amazonaws.com/dev/posturl\",data)\n        .then(res=>{\n            console.log(res)\n            this.setState({ui:'success',redirectionurl: res.data.message })\n        })\n\n    }\n    render(){\n        if(this.state.ui == 'addurl'){\n            return (\n                <div className=\"addUI\">\n                    <form>\n                        <FormGroup controlid=\"addurl\" \n                            validationState= {this.getValidationState()}\n                        >\n                        <ControlLabel>URL to shorten</ControlLabel>\n                        <FormControl\n                            type='text'\n                            value = {this.state.url}\n                            onChange = {this.handleChange}\n                            placeholder = \"Enter URL\"\n                        >\n                        </FormControl>\n                        </FormGroup>\n                    </form>\n                    <div className=\"submitFold\">\n                        <Button onClick={this.buttonClick} bsStyle={this.state.buttonStyle} disabled={this.state.buttonEnabled}>Shorten</Button>\n                    </div>\n                </div>\n                \n            )\n        }\n        else if(this.state.ui == \"success\"){\n            return (\n                <div className=\"successCard\">\n                    <div className=\"card\">\n                            <img src=\"./tick.png\" style={{width: \"30%\"}}/>\n                            <div className=\"container\">\n                            <h3>Share this link</h3>\n                            <p>{this.state.redirectionurl}</p>\n                            </div>\n                        </div>\n                </div>\n                    \n            )\n        }\n        \n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\n\n\nexport default class u extends Component{\n    constructor(){\n        super();\n        this.state = {\n            timeRemaining: 5\n        };\n\n    }\n    componentDidMount(){\n        const {hashLink} = this.props.match.params;\n        if (hashLink.length == 0){\n            alert(\"Please provide a proper link\")\n        }\n        let url = \"https://8523oudczf.execute-api.us-east-1.amazonaws.com/dev/u/\"+hashLink\n        axios.post(url,{})\n             .then(res =>{\n                 let redirectURL = res.data.message\n                 if(redirectURL === \"No such url exists!\"){\n                     console.log(\"No such URL exists ? how about creating one ?\")\n                 }\n                 else{\n                    window.location = redirectURL;\n                 }\n                 \n             })\n             .catch(err =>{\n                 console.log(\"Error occured\"+err)\n             })\n    }\n    render(){\n        const {hashLink} = this.props.match.params;\n        console.log(hashLink)\n        return(\n            <div>\n                <h1></h1>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Home from './containers/home';\nimport AddLink from './containers/addlink';\nimport u from './containers/u';\nexport default () =>\n    <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/addlink\" exact component={AddLink} />\n        <Route path=\"/u/:hashLink\"  component={u} />\n    </Switch>","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport Routes from './Routes';\nimport {LinkContainer} from 'react-router-bootstrap';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\">Chinna Link</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse >\n              <Nav pullRight>\n                <LinkContainer to=\"/addlink\">\n                  <NavItem>Add Link</NavItem>\n                </LinkContainer>\n              </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n<Router>\n<App />\n</Router>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}